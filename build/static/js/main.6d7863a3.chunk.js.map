{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["site_api","wordlist","fetch","then","resp","json","data","words","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchComponent","setState","previous_search","String","state","search_key","previous_page","parseInt","current_page","isLoaded","res","api_search","query","rec_materials","metadata","showRecommendations","IsSearching","console","log","ChangeSearchKey","value","CheckEnter","ele","key","AcceptRec","name","ChangePage","selected","BottomPagination","max_pages","react_default","a","createElement","dist_default","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","activeClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","disabledClassName","Recommendations","className","filter","word","startsWith","map","item","onClick","bind","assertThisInitialized","slice","NrOfSearches","num_or_materials","text","SearchBar","ref","input","focus","type","id","props","onChange","e","target","onKeyDown","placeholder","autoComplete","SearchButton","LogoIcon","src","alt","SearchItem","sitem","description","length","substr","href","url","title","SearchItemsUL","SpaceDIV","LoadingIcon","height","Fragment","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d7863a3.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport './css/bootstrap.css';\nimport ReactPaginate from 'react-paginate';\n\nlet site_api = 'https://platform.x5gon.org/api/v1/';\n\nlet wordlist = [];\nfetch('recommendation_words.json').then(function(resp) {\n\treturn resp.json().then(function(data) {\n\t\twordlist = data.words;\n\t});\n});\n\n/* https://platform.x5gon.org/api/v1/search?text=asd&page=2&type=all */\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\t// STATE\n\t\tthis.state = {\n\t\t\tsearch_key: '',\n\t\t\tcurrent_page: 1,\n\t\t\tprevious_page: 0,\n\t\t\tprevious_search: '',\n\t\t\tapi_search: {\n\t\t\t\tquery: {},\n\t\t\t\trec_materials: [],\n\t\t\t\tmetadata: { max_pages: 0 }\n\t\t\t},\n\t\t\tisLoaded: true,\n\t\t\tshowRecommendations: false,\n\t\t\tIsSearching: false\n\t\t};\n\t}\n\t// FUNCTIONS\n\tsearchComponent = () => {\n\t\tthis.setState({\n\t\t\tprevious_search: String(this.state.search_key),\n\t\t\tprevious_page: parseInt(this.state.current_page)\n\t\t});\n\t\tif (\n\t\t\tthis.state.search_key &&\n\t\t\t(this.state.search_key !== this.state.previous_search ||\n\t\t\t\tthis.state.previous_page !== this.state.current_page)\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\tisLoaded: false\n\t\t\t});\n\t\t\tfetch(\n\t\t\t\tsite_api +\n\t\t\t\t\t'search?text=' +\n\t\t\t\t\tthis.state.search_key +\n\t\t\t\t\t'&page=' +\n\t\t\t\t\tthis.state.current_page\n\t\t\t)\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(json => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\tapi_search: {\n\t\t\t\t\t\t\tquery: json.query,\n\t\t\t\t\t\t\trec_materials: json.rec_materials,\n\t\t\t\t\t\t\tmetadata: json.metadata\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshowRecommendations: false,\n\t\t\t\t\t\tIsSearching: true\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tconsole.log(this.state);\n\t\t}\n\t};\n\tChangeSearchKey = value => {\n\t\tthis.setState({\n\t\t\tsearch_key: value,\n\t\t\tshowRecommendations: true\n\t\t});\n\t};\n\tCheckEnter = ele => {\n\t\tif (ele.key === 'Enter') {\n\t\t\tthis.searchComponent();\n\t\t}\n\t};\n\tAcceptRec = name => {\n\t\tthis.setState({ search_key: name, showRecommendations: false });\n\t};\n\tChangePage = data => {\n\t\tthis.setState({ current_page: data.selected + 1 });\n\t\tthis.searchComponent();\n\t};\n\t/* TO JE PLUGIN IZ https://www.npmjs.com/package/react-paginate */\n\tBottomPagination = () => {\n\t\tif (this.state.api_search.metadata.max_pages) {\n\t\t\treturn (\n\t\t\t\t<ReactPaginate\n\t\t\t\t\tpageCount={this.state.api_search.metadata.max_pages}\n\t\t\t\t\tpageRangeDisplayed={5}\n\t\t\t\t\tmarginPagesDisplayed={1}\n\t\t\t\t\tonPageChange={this.ChangePage}\n\t\t\t\t\tcontainerClassName={'pagination justify-content-center'}\n\t\t\t\t\tpageClassName={'page-item'}\n\t\t\t\t\tpageLinkClassName={'page-link'}\n\t\t\t\t\tactiveClassName={'page-item active'}\n\t\t\t\t\tpreviousClassName={'page-item'}\n\t\t\t\t\tpreviousLinkClassName={'page-link'}\n\t\t\t\t\tnextClassName={'page-item'}\n\t\t\t\t\tnextLinkClassName={'page-link'}\n\t\t\t\t\tdisabledClassName={'page-item disabled'}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t// JSX ELEMENTS\n\tRecommendations = () => {\n\t\tif (this.state.search_key !== '' && this.state.showRecommendations) {\n\t\t\treturn (\n\t\t\t\t<ul className=\"recommendations\">\n\t\t\t\t\t{wordlist\n\t\t\t\t\t\t.filter(word => word.startsWith(this.state.search_key))\n\t\t\t\t\t\t.map(item => (\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"btn bg-transparent\"\n\t\t\t\t\t\t\t\t\tonClick={this.AcceptRec.bind(this, item)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))\n\t\t\t\t\t\t.slice(0, 6)}\n\t\t\t\t</ul>\n\t\t\t);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\tNrOfSearches = () => {\n\t\tif (this.state.IsSearching === true)\n\t\t\treturn (\n\t\t\t\t<p className=\"mt-2\">\n\t\t\t\t\tNumber of search results found:{' '}\n\t\t\t\t\t{this.state.api_search.metadata.num_or_materials} for{' '}\n\t\t\t\t\t<b>{this.state.api_search.query.text}</b> in{' '}\n\t\t\t\t\t{this.state.api_search.metadata.max_pages} pages \\n current page{' '}\n\t\t\t\t\t{this.state.current_page}\n\t\t\t\t</p>\n\t\t\t);\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t};\n\tSearchBar = () => {\n\t\treturn (\n\t\t\t<input\n\t\t\t\tref={input => input && input.focus()}\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={this.state.search_key}\n\t\t\t\tid={'todoName' + this.props.id}\n\t\t\t\tonChange={e => this.ChangeSearchKey(e.target.value)}\n\t\t\t\tonKeyDown={this.CheckEnter}\n\t\t\t\tplaceholder=\"Search for OER material\"\n\t\t\t\tclassName=\"form-control align-middle mb-3\"\n\t\t\t\tautoComplete=\"off\"\n\t\t\t/>\n\t\t);\n\t};\n\tSearchButton = text => {\n\t\treturn (\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName=\"btn btn-outline-primary px-4\"\n\t\t\t\tonClick={this.searchComponent.bind(this)}\n\t\t\t>\n\t\t\t\t{text.text}\n\t\t\t</button>\n\t\t);\n\t};\n\tLogoIcon = () => {\n\t\treturn (\n\t\t\t<img\n\t\t\t\tsrc=\"https://www.x5gon.org/wp-content/themes/x5gon/dist/assets/img/logo.svg\"\n\t\t\t\talt=\"X5GON\"\n\t\t\t\tclassName=\"my-5 img-fluid\"\n\t\t\t/>\n\t\t);\n\t};\n\tSearchItem = item => {\n\t\tlet sitem = item;\n\t\tif (sitem.description && sitem.description.length > 280) {\n\t\t\tsitem.description = sitem.description.substr(0, 280) + ' ...';\n\t\t}\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<div className=\"jumbotron bg-transparent py-1 my-1\">\n\t\t\t\t\t<a href={sitem.url} target=\"blank\">\n\t\t\t\t\t\t<h4 className=\"searched\">{sitem.title}</h4>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span className=\"text-muted\">\n\t\t\t\t\t\t<small>{sitem.url}</small>\n\t\t\t\t\t</span>\n\t\t\t\t\t<p>{sitem.description}</p>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t);\n\t};\n\tSearchItemsUL = item => {\n\t\treturn (\n\t\t\t<ul className=\"searched-items\">\n\t\t\t\t{this.state.api_search.rec_materials.map(item => this.SearchItem(item))}\n\t\t\t</ul>\n\t\t);\n\t};\n\tSpaceDIV = () => {\n\t\tif (this.state.IsSearching === false) {\n\t\t\treturn <div id=\"spacing-div\" />;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\tLoadingIcon = () => {\n\t\tif (this.state.isLoaded === false) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"Ripple-1.4s-200px.gif\"\n\t\t\t\t\t\talt=\"loading-animation\"\n\t\t\t\t\t\theight=\"50px\"\n\t\t\t\t\t\tclassName=\"loading-icon\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t// OTHER\n\n\t// RENDER VIEW\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<this.SpaceDIV />\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"text-center\" id=\"search\">\n\t\t\t\t\t\t<this.LogoIcon />\n\t\t\t\t\t\t<this.SearchBar />\n\t\t\t\t\t\t<this.SearchButton text={'Search'} />\n\t\t\t\t\t\t<this.LoadingIcon />\n\t\t\t\t\t</div>\n\t\t\t\t\t<this.Recommendations />\n\t\t\t\t\t<this.NrOfSearches />\n\t\t\t\t\t<this.SearchItemsUL />\n\t\t\t\t\t<this.BottomPagination />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}